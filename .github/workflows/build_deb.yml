name: Build debian package
on:
  #workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: "0"
    - name: Create tag
      id: create_tag
      run: |
        tag=release-$(make version)-$(date +%Y%m%d-%H%M%S)
        echo "::set-output name=tag::$tag"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        release_name: ${{ steps.create_tag.outputs.tag }}
        draft: true
        prerelease: false

    - name: Create artifact files
      run: |
        mkdir info
        echo "${{ steps.create_release.outputs.id }}" > info/release_id
        echo "${{ steps.create_release.outputs.upload_url }}" > info/upload_url
    - uses: actions/upload-artifact@v1
      with:
        name: info
        path: info

  build:
    name: Build Release
    needs: [release]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: "0"

    - name: Create tag
      id: create_tag
      run: |
        tag=$(make version)
        echo "::set-output name=tag::$tag"
    - name: Get deb name
      id: debname
      run: |
        debname=$(make debname)
        echo "::set-output name=debname::$debname"

    - uses: actions/download-artifact@v1
      with:
        name: info
    - name: Set upload_url
      id: upload_info
      run: |
        upload_url=$(cat info/upload_url)
        echo "::set-output name=upload_url::$upload_url"

    - name: Install extra packages
      run: |
        sudo apt-get update
        sudo apt-get install git git2cl lintian debhelper

    - name: Show info
      run: make info

    - name: Create deb package
      run: make deb

    - name: Display artifacts
      run: ls -R xubuntu-remaster_*_all.deb
      working-directory: .

    - name: Upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.upload_info.outputs.upload_url }}
        asset_path: ${{ steps.debname.outputs.debname }}
        asset_name: ${{ steps.debname.outputs.debname }}
        asset_content_type: application/vnd.debian.binary-package

  metadata:
    name: Publish Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: info
    - name: Set publish_info
      id: publish_info
      run: |
        release_id=$(cat info/release_id)
        echo "::set-output name=release_id::$release_id"
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.publish_info.outputs.release_id }}
    - uses: eregon/keep-last-n-releases@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        n: 10
